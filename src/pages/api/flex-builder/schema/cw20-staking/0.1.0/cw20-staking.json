{"schema":{"$schema":"http://json-schema.org/draft-07/schema#","title":"Cw20 staking","type":"object","required":["staking_token"],"properties":{"additional_rewards":{"description":"Any rewards in addition to the staking token. This list cannot include the staking token.","type":["array","null"],"items":{"type":"object","required":["asset_info"],"properties":{"allocation_config":{"anyOf":[{"type":"object","required":["cycle_duration","cycle_rewards","init_timestamp","till_timestamp"],"properties":{"cycle_duration":{"description":"Cycle duration in timestamps","type":"integer","format":"uint64","minimum":0},"cycle_rewards":{"description":"Rewards distributed during the 1st cycle.","allOf":[{"description":"A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```","type":"string"}]},"init_timestamp":{"description":"Timestamp from which Rewards will start getting accrued against the staked LP tokens","type":"integer","format":"uint64","minimum":0},"reward_increase":{"description":"Percent increase in Rewards per cycle","anyOf":[{"description":"A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)","type":"string"},{"type":"null"}]},"till_timestamp":{"description":"Timestamp till which Rewards will be accrued. No staking rewards are accrued beyond this timestamp","type":"integer","format":"uint64","minimum":0}}},{"type":"null"}]},"asset_info":{"description":"Represents the type of an fungible asset\n\nEach **asset info** instance can be one of two variants:\n\n- CW20 tokens. To create an **asset info** instance of this type, provide the contract address. - Native SDK coins. To create an **asset info** instance of this type, provide the denomination.","oneOf":[{"type":"object","required":["cw20"],"properties":{"cw20":{"type":"string"}},"additionalProperties":false},{"type":"object","required":["native"],"properties":{"native":{"type":"string"}},"additionalProperties":false}]}}},"title":"additional_rewards"},"staking_token":{"description":"The cw20 token that can be staked.","allOf":[{"type":"object","required":["identifier"],"properties":{"identifier":{"description":"Can be either an address or identifier of an ADO in a app.","type":"string"}}}],"title":"staking_token"}},"$id":"cw20-staking","classifier":"","class":"baseADO","version":"0.1.0"},"ui-schema":{},"form-data":{}}