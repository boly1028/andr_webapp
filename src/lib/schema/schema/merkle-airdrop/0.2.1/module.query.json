{
  "schema": {
    "type": "object",
    "required": ["module"],
    "properties": {
      "module": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
            "type": "string",
            "title": "Id"
          }
        },
        "additionalProperties": false,
        "title": "Module"
      }
    },
    "additionalProperties": false,
    "title": "Module",
    "$id": "module",
    "class": "query",
    "version": "0.2.1",
    "classifier": ""
  },
  "ui-schema": {},
  "form-data": {}
}
