{"schema":{"$schema":"http://json-schema.org/draft-07/schema#","title":"Splitter","type":"object","required":["kernel_address","recipients"],"properties":{"kernel_address":{"type":"string","title":"Kernel address"},"lock_time":{"type":["integer","null"],"format":"uint64","minimum":0,"title":"Lock time"},"modules":{"type":["array","null"],"items":{"description":"A struct describing a token module, provided with the instantiation message this struct is used to record the info about the module and how/if it should be instantiated","type":"object","required":["address","is_mutable"],"properties":{"address":{"description":"An address that can be used within the Andromeda ecosystem. Inspired by the cosmwasm-std `Addr` type. https://github.com/CosmWasm/cosmwasm/blob/2a1c698520a1aacedfe3f4803b0d7d653892217a/packages/std/src/addresses.rs#L33\n\nThis address can be one of two things: 1. A valid human readable address e.g. `cosmos1...` 2. A valid Andromeda VFS path e.g. `/home/user/app/component`\n\nVFS paths can be local in the case of an app and can be done by referencing `./component` they can also contain protocols for cross chain communication. A VFS path is usually structured as so:\n\n`<protocol>://<chain (required if ibc used)>/<path>` or `ibc://cosmoshub-4/user/app/component`","type":"string"},"is_mutable":{"type":"boolean"},"name":{"type":["string","null"]}},"additionalProperties":false},"title":"Modules"},"owner":{"type":["string","null"],"title":"Owner"},"recipients":{"description":"The vector of recipients for the contract. Anytime a `Send` execute message is sent the amount sent will be divided amongst these recipients depending on their assigned percentage.","type":"array","items":{"type":"object","required":["percent","recipient"],"properties":{"percent":{"description":"A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)","type":"string"},"recipient":{"description":"A simple struct used for inter-contract communication. The struct can be used in two ways:\n\n1. Simply just providing an `AndrAddr` which will treat the communication as a transfer of any related funds 2. Providing an `AndrAddr` and a `Binary` message which will be sent to the contract at the resolved address\n\nThe `Binary` message can be any message that the contract at the resolved address can handle.","type":"object","required":["address"],"properties":{"address":{"description":"An address that can be used within the Andromeda ecosystem. Inspired by the cosmwasm-std `Addr` type. https://github.com/CosmWasm/cosmwasm/blob/2a1c698520a1aacedfe3f4803b0d7d653892217a/packages/std/src/addresses.rs#L33\n\nThis address can be one of two things: 1. A valid human readable address e.g. `cosmos1...` 2. A valid Andromeda VFS path e.g. `/home/user/app/component`\n\nVFS paths can be local in the case of an app and can be done by referencing `./component` they can also contain protocols for cross chain communication. A VFS path is usually structured as so:\n\n`<protocol>://<chain (required if ibc used)>/<path>` or `ibc://cosmoshub-4/user/app/component`","type":"string"},"msg":{"anyOf":[{"description":"Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.","type":"string"},{"type":"null"}]}},"additionalProperties":false}},"additionalProperties":false},"title":"Recipients"}},"additionalProperties":false,"$id":"splitter","version":"0.2.3","classifier":"splitter","class":"baseADO","description":"An ADO used to split sent funds amongst two or more predefined addresses/wallets"},"ui-schema":{"lock_time":{"ui:options":{"title":"Lock Time","description":"Recipients cannot be changed for this duration of time selected. Minimum is 1 day and Maximum is 1 year."},"ui:widget":"duration"},"modules":{"ui:options":{"title":"Modules","description":"A component that can be attached to ADOs (Ex. Rates)"},"items":{"ui:options":{"title":"Module"},"ui:order":["*","is_mutable"],"address":{"ui:options":{"title":"Add Module","description":"","alerts":[{"text":"Allowed modules: \"address_list\"","type":"error"}]},"identifier":{"ui:options":{"title":"Identifier","description":"Can be either an address or app component name of a specific ADO within an app"}}},"module_type":{"ui:options":{"title":"Module Type","description":"The name of the module to add. Can be set one of the following: \"address_list\"."}},"is_mutable":{"ui:options":{"title":"Is Module Able to be Modified?","description":"Whether the module can be later modified or not."}}}},"recipients":{"ui:options":{"title":"Recipients","description":"A list of one to many recipients that can be changed as you build.","alerts":[{"text":"To be a valid recipient and required inputs include the following:<ul><li>Be non-empty</li><li>Have percentage amounts less than or equaling 1</li><li>A maximum of <b>100</b> recipients can be set.</li></ul>","type":"warning"}]},"items":{"ui:options":{"title":"Distribution Percentage"},"percent":{"ui:options":{"title":"Percentage","description":" "}},"recipient":{"ui:options":{},"addr":{"ui:options":{"title":"Address"}},"a_d_o":{"ui:options":{"title":"ADO"},"address":{"ui:options":{"title":"Address","description":"Addr can also be a human-readable identifier used in a app contract."},"identifier":{"ui:options":{"description":"Can be either an address or app component name of a specific ADO within an app","title":"Identifier"}}},"msg":{"ui:options":{}}}}}}},"form-data":{}}