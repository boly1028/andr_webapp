{
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Rates",
    "type": "object",
    "required": ["kernel_address", "rates"],
    "properties": {
      "kernel_address": {
        "type": "string",
        "title": "Kernel address",
        "default": ""
      },
      "owner": { "type": ["string", "null"], "title": "Owner" },
      "rates": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["is_additive", "rate", "recipients"],
          "properties": {
            "description": { "type": ["string", "null"] },
            "is_additive": { "type": "boolean" },
            "rate": {
              "description": "An enum used to define various types of fees",
              "oneOf": [
                {
                  "description": "A flat rate fee",
                  "type": "object",
                  "required": ["flat"],
                  "properties": {
                    "flat": {
                      "type": "object",
                      "required": ["amount", "denom"],
                      "properties": {
                        "amount": {
                          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
                          "type": "string",
                          "$original_type": "Uint128"
                        },
                        "denom": { "type": "string" }
                      },
                      "$original_type": "Coin"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "description": "A percentage fee",
                  "type": "object",
                  "required": ["percent"],
                  "properties": {
                    "percent": {
                      "type": "object",
                      "required": ["percent"],
                      "properties": {
                        "percent": {
                          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
                          "type": "string",
                          "$original_type": "Decimal"
                        }
                      },
                      "additionalProperties": false,
                      "$original_type": "PercentRate"
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "$original_type": "Rate"
            },
            "recipients": {
              "type": "array",
              "items": {
                "description": "This is ONE recipient.",
                "type": "object",
                "required": ["address"],
                "properties": {
                  "address": {
                    "description": "Can be either an address or app component name of a specific ADO within an app",
                    "type": "string",
                    "$original_type": "AndrAddr"
                  },
                  "ibc_recovery_address": {
                    "anyOf": [
                      {
                        "description": "Enter an address on the IBC network that you designate as a recovery address.",
                        "type": "string",
                        "$original_type": "AndrAddr"
                      },
                      { "type": "null" }
                    ]
                  },
                  "msg": {
                    "anyOf": [
                      {
                        "description": "Enter a msg if necessary. Often required when sending to exchange wallets. ",
                        "type": "string",
                        "$original_type": "Binary"
                      },
                      { "type": "null" }
                    ]
                  }
                },
                "additionalProperties": false,
                "$original_type": "Recipient"
              }
            }
          },
          "additionalProperties": false,
          "$original_type": "RateInfo"
        },
        "title": "Rates"
      }
    },
    "additionalProperties": false,
    "$id": "rates",
    "version": "0.2.1",
    "classifier": "sale",
    "class": "module",
    "description": "The Rates Module allows users to add taxes or royalties to any sales they perform. It can be added to any of the ADOs that conduct sales, such as the auction, marketplace, crowdfund, and many more. Once a sale is made, the appropriate rates are sent to the location specified by the user."
  },
  "ui-schema": {
    "rates": {
      "ui:options": {
        "title": "Rate Information",
        "description": "Every recipient will be allocated the specified rate. For instance, if a 3% rate is set and there are 5 recipients, a cumulative total of 15% will be distributed among them."
      },
      "items": {
        "ui:options": { "title": "Rate Info" },
        "ui:order": ["rate", "is_additive", "description", "recipients", "*"],
        "description": {
          "ui:options": {
            "title": "Rate Description",
            "description": "Optional description for the rate."
          }
        },
        "is_additive": {
          "ui:options": {
            "title": "Use as Tax?",
            "description": "By default a rate is assumed as a royalty, select this field to use as tax instead.",
            "alerts": [
              {
                "text": "Taxes are added to the selling price (<b>Paid by buyer</b>) while royalties are deducted from the price (<b>Paid by seller</b>).",
                "type": "error"
              }
            ]
          }
        },
        "rate": {
          "ui:options": { "optionNames": ["Flat", "Percentage"] },
          "flat": {
            "ui:options": { "title": "Coin" },
            "amount": {
              "ui:options": {
                "title": "Amount",
                "description": "The amount of funds."
              }
            },
            "denom": {
              "ui:widget": "denom",
              "ui:options": {
                "title": "Denomination",
                "description": "Enter the token denomination in micro units, which are denoted with a leading 'u', such as 'uluna', 'ujunox', or 'uarch'. This represents the smallest divisible unit of the token's value."
              }
            }
          },
          "percent": {
            "ui:options": { "title": "Rate Percentage" },
            "percent": {
              "ui:options": {
                "title": "Percent",
                "description": "The percentage to take as rate. This must be as decimal, formatted like this '0.05' (which would be 5%)"
              }
            }
          },
          "external": {
            "ui:options": { "title": "Primitive Contract" },
            "address": {
              "ui:options": {
                "title": "Address",
                "description": "The address of the primitive contract."
              },
              "identifier": {
                "ui:options": {
                  "title": "Identifier",
                  "description": "Can be either an address or app component name of a specific ADO within an app"
                }
              }
            },
            "key": {
              "ui:options": {
                "title": "Key",
                "description": "The optional key for the stored data."
              }
            }
          }
        },
        "recipients": {
          "ui:options": {
            "title": "Recipients of Rate Adjustment",
            "description": "The addresses to receive the rate specified"
          },
          "items": {
            "ui:options": {},
            "addr": { "ui:options": { "title": "Address" } },
            "a_d_o": {
              "ui:options": { "title": "ADO" },
              "address": {
                "ui:options": {
                  "title": "Address",
                  "description": "Addr can also be a human-readable identifier used in a app contract."
                },
                "identifier": {
                  "ui:options": {
                    "description": "Can be either an address or app component name of a specific ADO within an app.",
                    "title": "Identifier"
                  }
                }
              },
              "msg": { "ui:options": {} }
            }
          }
        }
      }
    },
    "kernel_address": { "ui:widget": "hidden" }
  },
  "form-data": {}
}
