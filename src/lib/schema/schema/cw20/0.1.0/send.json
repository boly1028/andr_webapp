{"schema":{"description":"Send is a base message to transfer tokens to a contract and trigger an action on the receiving contract.","type":"object","required":["send"],"properties":{"send":{"type":"object","required":["amount","contract","msg"],"properties":{"amount":{"description":"A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```","type":"string","title":"amount"},"contract":{"type":"string","title":"contract"},"msg":{"description":"Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>","type":"string","title":"msg"}}}},"additionalProperties":false,"$id":"send","class":"modifier","version":"0.1.0","classifier":""},"ui-schema":{},"form-data":{}}