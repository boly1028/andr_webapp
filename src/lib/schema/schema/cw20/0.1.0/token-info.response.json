{"schema":{"$schema":"http://json-schema.org/draft-07/schema#","title":"Token info","type":"object","required":["decimals","name","symbol","total_supply"],"properties":{"decimals":{"type":"integer","format":"uint8","minimum":0,"title":"Decimals"},"name":{"type":"string","title":"Name"},"symbol":{"type":"string","title":"Symbol"},"total_supply":{"description":"A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```","type":"string","$original_type":"Uint128","title":"Total supply"}},"additionalProperties":false,"$id":"token_info","version":"0.1.0","classifier":"response","class":"response"},"ui-schema":{},"form-data":{}}