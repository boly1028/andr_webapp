{"schema":{"$schema":"http://json-schema.org/draft-07/schema#","title":"CW20 Staking","type":"object","required":["kernel_address","staking_token"],"properties":{"additional_rewards":{"description":"Any rewards in addition to the staking token. This list cannot include the staking token.","type":["array","null"],"items":{"type":"object","required":["asset_info"],"properties":{"allocation_config":{"anyOf":[{"type":"object","required":["cycle_duration","cycle_rewards","init_timestamp","till_timestamp"],"properties":{"cycle_duration":{"description":"Cycle duration in timestamps","type":"integer","format":"uint64","minimum":0},"cycle_rewards":{"description":"Rewards distributed during the 1st cycle.","allOf":[{"description":"A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```","type":"string"}]},"init_timestamp":{"description":"Timestamp from which Rewards will start getting accrued against the staked LP tokens","type":"integer","format":"uint64","minimum":0},"reward_increase":{"description":"Percent increase in Rewards per cycle","anyOf":[{"description":"A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)","type":"string"},{"type":"null"}]},"till_timestamp":{"description":"Timestamp till which Rewards will be accrued. No staking rewards are accrued beyond this timestamp","type":"integer","format":"uint64","minimum":0}},"additionalProperties":false},{"type":"null"}]},"asset_info":{"description":"Represents the type of an fungible asset.\n\nEach **asset info** instance can be one of three variants:\n\n- Native SDK coins. To create an **asset info** instance of this type, provide the denomination. - CW20 tokens. To create an **asset info** instance of this type, provide the contract address.","oneOf":[{"type":"object","required":["native"],"properties":{"native":{"type":"string"}},"additionalProperties":false},{"type":"object","required":["cw20"],"properties":{"cw20":{"type":"string"}},"additionalProperties":false}]}},"additionalProperties":false},"title":"Additional rewards"},"kernel_address":{"type":"string","title":"Kernel address","default":""},"modules":{"type":["array","null"],"items":{"description":"A struct describing a token module, provided with the instantiation message this struct is used to record the info about the module and how/if it should be instantiated","type":"object","required":["address","is_mutable"],"properties":{"address":{"description":"An address that can be used within the Andromeda ecosystem. Inspired by the cosmwasm-std `Addr` type. https://github.com/CosmWasm/cosmwasm/blob/2a1c698520a1aacedfe3f4803b0d7d653892217a/packages/std/src/addresses.rs#L33\n\nThis address can be one of two things: 1. A valid human readable address e.g. `cosmos1...` 2. A valid Andromeda VFS path e.g. `/home/user/app/component`\n\nVFS paths can be local in the case of an app and can be done by referencing `./component` they can also contain protocols for cross chain communication. A VFS path is usually structured as so:\n\n`<protocol>://<chain (required if ibc used)>/<path>` or `ibc://cosmoshub-4/user/app/component`","type":"string"},"is_mutable":{"type":"boolean"},"name":{"type":["string","null"]}},"additionalProperties":false},"title":"Modules"},"owner":{"type":["string","null"],"title":"Owner"},"staking_token":{"description":"The cw20 token that can be staked.","allOf":[{"description":"An address that can be used within the Andromeda ecosystem. Inspired by the cosmwasm-std `Addr` type. https://github.com/CosmWasm/cosmwasm/blob/2a1c698520a1aacedfe3f4803b0d7d653892217a/packages/std/src/addresses.rs#L33\n\nThis address can be one of two things: 1. A valid human readable address e.g. `cosmos1...` 2. A valid Andromeda VFS path e.g. `/home/user/app/component`\n\nVFS paths can be local in the case of an app and can be done by referencing `./component` they can also contain protocols for cross chain communication. A VFS path is usually structured as so:\n\n`<protocol>://<chain (required if ibc used)>/<path>` or `ibc://cosmoshub-4/user/app/component`","type":"string"}],"title":"Staking token"}},"additionalProperties":false,"$id":"cw20-staking","version":"0.2.1","classifier":"escrow","class":"baseADO","description":"This ADO allows users to stake a specified token and to receive rewards in any number of other tokens in proportion to their share"},"ui-schema":{"ui:order":["staking_token","additional_rewards","*"],"additional_rewards":{"ui:options":{"title":"Additional Rewards","description":"Any rewards in addition to the staking token. This list cannot include the staking token since it is used as a reward by default.","alerts":[{"text":"Can have a maximum of 10 reward tokens.","type":"warning"}]},"items":{"ui:order":["asset_info","allocation_config","*"],"ui:options":{"title":"Reward Token","description":"Any rewards in addition to the staking token. This list cannot include the staking token since it is used as a reward by default."},"allocation_config":{"ui:order":["init_timestamp","till_timestamp","cycle_rewards","cycle_duration","reward_increase","*"],"cycle_duration":{"ui:options":{"title":"Duration of Staking Period","description":"Cycle duration in seconds."}},"cycle_rewards":{"ui:options":{"title":"Initial Reward Amount","description":"Rewards distributed during the 1st cycle."}},"init_timestamp":{"ui:options":{"title":"Reward Start","description":"Timestamp from which Rewards will start getting accrued against the staked LP tokens."}},"reward_increase":{},"till_timestamp":{"ui:options":{"title":"Reward End","description":"Timestamp till which Rewards will be accrued. No staking rewards are accrued beyond this timestamp."}}},"asset_info":{"cw20":{"ui:options":{"title":"Contract Address"}},"native":{"ui:options":{"title":"Coin Denomination"}}}}},"staking_token":{"ui:options":{"title":"Token to Stake","description":"The cw20 token that can be staked","alerts":[{"text":"The additional rewards should not include the staking token.","type":"error"}]},"identifier":{"ui:options":{"title":"Indentifier","description":"Can be either an address or app component name of a specific ADO within an app"}}},"kernel_address":{"ui:widget":"hidden"}},"form-data":{}}