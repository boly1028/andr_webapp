{"schema":{"$schema":"http://json-schema.org/draft-07/schema#","title":"All nft info","type":"object","required":["access","info"],"properties":{"access":{"description":"Who can transfer the token","allOf":[{"type":"object","required":["approvals","owner"],"properties":{"approvals":{"description":"If set this address is approved to transfer/send the token as well","type":"array","items":{"type":"object","required":["expires","spender"],"properties":{"expires":{"description":"When the Approval expires (maybe Expiration::never)","allOf":[{"description":"Expiration represents a point in time when some event happens. It can compare with a BlockInfo and will return is_expired() == true once the condition is hit (and for every block in the future)","oneOf":[{"description":"AtHeight will expire when `env.block.height` >= height","type":"object","required":["at_height"],"properties":{"at_height":{"type":"integer","format":"uint64","minimum":0}},"additionalProperties":false},{"description":"AtTime will expire when `env.block.time` >= time","type":"object","required":["at_time"],"properties":{"at_time":{"description":"A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```","allOf":[{"description":"A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```","type":"string","$original_type":"Uint64"}],"$original_type":"Timestamp"}},"additionalProperties":false},{"description":"Never will never expire. Used to express the empty variant","type":"object","required":["never"],"properties":{"never":{"type":"object","additionalProperties":false}},"additionalProperties":false}],"$original_type":"Expiration"}]},"spender":{"description":"Account that can transfer/send the token","type":"string"}},"additionalProperties":false,"$original_type":"Approval"}},"owner":{"description":"Owner of the token","type":"string"}},"additionalProperties":false,"$original_type":"OwnerOfResponse"}],"title":"Access"},"info":{"description":"Data on the token itself,","allOf":[{"type":"object","required":["extension"],"properties":{"extension":{"description":"You can add any custom metadata here when you extend cw721-base","allOf":[{"description":"https://docs.opensea.io/docs/metadata-standards Replicates OpenSea Metadata Standards","type":"object","required":["attributes","image","name","publisher"],"properties":{"animation_url":{"description":"A URL to any multi-media attachments","type":["string","null"]},"attributes":{"description":"The metadata of the token (if it exists)","type":"array","items":{"type":"object","required":["trait_type","value"],"properties":{"display_type":{"description":"The string used to display the attribute, if none is provided the `key` field can be used","type":["string","null"]},"trait_type":{"description":"The key for the attribute","type":"string"},"value":{"description":"The value for the attribute","type":"string"}},"additionalProperties":false,"$original_type":"MetadataAttribute"}},"description":{"description":"An optional description of the token","type":["string","null"]},"external_url":{"description":"A URL to the token's source","type":["string","null"]},"image":{"description":"URL to token image","type":"string"},"image_data":{"description":"Raw SVG image data","type":["string","null"]},"name":{"description":"The name of the token","type":"string"},"publisher":{"description":"The original publisher of the token","type":"string"},"youtube_url":{"description":"A URL to a related YouTube videos","type":["string","null"]}},"additionalProperties":false,"$original_type":"TokenExtension"}]},"token_uri":{"description":"Universal resource identifier for this NFT Should point to a JSON file that conforms to the ERC721 Metadata JSON Schema","type":["string","null"]}},"additionalProperties":false,"$original_type":"NftInfoResponse_for_TokenExtension"}],"title":"Info"}},"additionalProperties":false,"$id":"all_nft_info","version":"0.1.1","classifier":"response","class":"response"},"ui-schema":{},"form-data":{}}